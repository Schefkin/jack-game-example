/**
 * Implements level2
 */
class Level2 {
    method void draw() {
        var int x, y;
        let x = 16;
        let y = 16;

        do Screen.drawRectangle(0, 0, (x * 32) - 1, (y * 2) - 1);

        do Screen.drawRectangle(0, 2, (x * 11) - 1, (y * 3) - 1);
        do Screen.drawRectangle((x * 12), 2, (x * 32) - 1, (y * 3) - 1);

        do Screen.drawRectangle(0, (y * 13), (x * 32) - 1, (y * 16) - 1);

        // obstacles
        do Screen.drawRectangle((x * 10), (y * 4), (x * 12) - 1, (y * 5) - 1);
        do Screen.drawRectangle((x * 13), (y * 3), (x * 14) - 1, (y * 4) - 1);

        // small blocks
        do Screen.drawRectangle((x * 2), (y * 4), (x * 3) - 1, (y * 5) - 1);

        do Screen.drawRectangle((x * 1), (y * 7), (x * 2) - 1, (y * 8) - 1);

        do Screen.drawRectangle((x * 0), (y * 10), (x * 1) - 1, (y * 11) - 1);

        do Screen.drawRectangle((x * 5), (y * 9), (x * 6) - 1, (y * 10) - 1);

        do Screen.drawRectangle((x * 8), (y * 6), (x * 9) - 1, (y * 7) - 1);

        do Screen.drawRectangle((x * 9), (y * 12), (x * 10) - 1, (y * 13) - 1);

        // post
        do Screen.drawRectangle((x * 10), (y * 6), (x * 11) - 1, (y * 13) - 1);

        return;
    }

    method boolean isFinished() {
            var int address;
            var int x, y;
            let x = 11;
            let y = 2;

            // define the "win block"
            let address = Memory.peek(16384 + (32 * 16 * y) + (16 * x / 16));

            // if adrress is black, level won
            if (address = -1) {return true;} else {return false;}
    }

    method Square getStartingSquare() {
        var int x, y;
        let x = 10;
        let y = 3;
        return Square.new(16 * x, 16 * y, 15);
    }

}

